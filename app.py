from flask import Flask, request, render_template, jsonify
from langchain.llms import OpenAI
from langchain.chat_models import ChatOpenAI
from langchain.schema import HumanMessage
import os
import json

app = Flask(__name__)

# Get your OpenAI API key from environment variables
api_key = os.getenv('OpenAI_KEY')

# Initialize the chat model with your OpenAI API key
chat_model = ChatOpenAI(openai_api_key=api_key, temperature=0.9)

@app.route('/')
def home():
    return render_template('index.html')

@app.route('/parse', methods=['POST'])
def parse_data():
    data = request.get_json()

    # Parse the WiFi scanner data here
    parsed_data = parse_wifi_scanner_data(data)

    # Store the parsed data in the session or a database for further usage

    return jsonify(parsed_data)

@app.route('/get-response', methods=['POST'])
def get_response():
    data = request.get_json()

    # Convert incoming message into a HumanMessage object
    human_message = HumanMessage(content=data['message'])

    # Generate a response for the incoming message
    response = chat_model([human_message])

    # The response is a list of Message objects. We want to send back the content of the last message
    return jsonify(response[-1].content)

def parse_wifi_scanner_data(data):
    # This is a placeholder function. You should replace this with your actual parsing logic.
    return json.loads(data)

if __name__ == "__main__":
    app.run(debug=True)
